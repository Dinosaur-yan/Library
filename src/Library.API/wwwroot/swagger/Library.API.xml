<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library.API</name>
    </assembly>
    <members>
        <member name="M:Library.API.Configurations.MemoryCacheConfig.AddMemoryCacheConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            内存缓存事实上是一个键值对字典
        </member>
        <member name="M:Library.API.Configurations.ResponseCacheConfig.AddCacheProfiles(System.Collections.Generic.IDictionary{System.String,Microsoft.AspNetCore.Mvc.CacheProfile})">
            缓存是一种通过存储资源的备份，在请求时返回资源备份的技术
            1. http缓存（是否使用缓存Cache-Control、缓存有效时间Expires，只有当请求是GET或HEAD并且返回结果为200 OK状态码时，响应才支持缓存）
             常见的Cache-Control指令：
             public: 表明响应可以被任何对象（如发送请求的客户端和代理服务器）缓存
             private: 表明响应只能为单个用户缓存，不能作为共享缓存（及代理服务器不能缓存它）
             max-age: 设置缓存的最大存储时间，超过这个时间缓存被认为过期，单位为秒；当与Expires同时出现时，优先使用max-age
             no-cache: 必须到原始服务器验证后才能使用的缓存
                 验证缓存自愿的方式有两种
                 (1) 通过响应消息头中的Last-Modified（资源最后更新的时间），在验证时，需要在请求头中添加If-Modified-Since消息头，这个值是客户端最后一次收到该响应资源Last-Modified的值
                 (2) 通过使用实体标签ETag（Entity Tag），在验证时，需要在请求头中添加If-None-Match，这个值是客户端最后一次从服务器获取的ETag值；
                     当ETag一致时返回304Not Modified状态码，不一致时处理请求，
             no-store: 缓存不应存储有关客户端请求或服务器的任何内容 
        </member>
        <member name="T:Library.API.Controllers.AuthorController">
            <summary>
            author
            </summary>
        </member>
        <member name="M:Library.API.Controllers.AuthorController.GetAuthors(Library.API.Helpers.AuthorResourceParameters)">
            <summary>
            获取所有author资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorController.GetAuthor(System.Guid)">
            <summary>
            获取author资源
            </summary>
            <param name="authorId"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorController.CreateAuthor(Library.API.Models.AuthorForCreationDto)">
            <summary>
            创建author资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.AuthorController.DeleteAuthor(System.Guid)">
            <summary>
            删除author资源
            </summary>
            <param name="authorId"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Controllers.BookController">
            <summary>
            book
            </summary>
        </member>
        <member name="M:Library.API.Controllers.BookController.GetBooks(System.Guid)">
            <summary>
            获取所有book资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.GetBook(System.Guid,System.Guid)">
            <summary>
            获取book资源
            </summary>
            <param name="authorId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.CreateBook(System.Guid,Library.API.Models.BookForCreationDto)">
            <summary>
            创建book资源
            </summary>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.DeleteBook(System.Guid,System.Guid)">
            <summary>
            删除book资源
            </summary>
            <param name="authorId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.UpdateBook(System.Guid,System.Guid,Library.API.Models.BookForUpdateDto)">
            <summary>
            全量更新book资源
            </summary>
            <param name="authorId"></param>
            <param name="bookId"></param>
            <param name="updateBook"></param>
            <returns></returns>
        </member>
        <member name="M:Library.API.Controllers.BookController.PartiallyUpdateBook(System.Guid,System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Library.API.Models.BookForUpdateDto})">
            <summary>
            局部更新book资源
            </summary>
            <param name="authorId"></param>
            <param name="bookId"></param>
            <param name="patchDocument"></param>
            <returns></returns>
        </member>
        <member name="P:Library.API.Entities.Author.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Library.API.Entities.Author.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Library.API.Entities.Author.BirthDate">
            <summary>
            出生日期
            </summary>
        </member>
        <member name="P:Library.API.Entities.Author.BirthPlace">
            <summary>
            出生地址
            </summary>
        </member>
        <member name="P:Library.API.Entities.Author.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:Library.API.Entities.Book.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Library.API.Entities.Book.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Library.API.Entities.Book.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Library.API.Entities.Book.Pages">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Library.API.Entities.Book.AuthorId">
            <summary>
            作者Id
            </summary>
        </member>
        <member name="P:Library.API.Helpers.ApiError.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="P:Library.API.Helpers.ApiError.Detail">
            <summary>
            详细信息
            </summary>
        </member>
        <member name="M:Library.API.Helpers.PagedList`1.CreateAsync(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            创建分页数据
            </summary>
            <param name="source"></param>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="T:Library.API.Helpers.PropertyMapping">
            <summary>
            属性映射
            </summary>
        </member>
        <member name="P:Library.API.Helpers.PropertyMapping.TargetProperty">
            <summary>
            目标属性
            </summary>
        </member>
        <member name="P:Library.API.Helpers.PropertyMapping.IsRevert">
            <summary>
            是否顺序相反
            </summary>
        </member>
        <member name="T:Library.API.Models.AuthorDto">
            <summary>
            作者
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorDto.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorDto.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorDto.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorDto.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorDto.BirthPlace">
            <summary>
            出生地址
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForCreationDto.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForCreationDto.Age">
            <summary>
            年龄
            </summary>
        </member>
        <member name="P:Library.API.Models.AuthorForCreationDto.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="T:Library.API.Models.BookDto">
            <summary>
            书
            </summary>
        </member>
        <member name="P:Library.API.Models.BookDto.Id">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="P:Library.API.Models.BookDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Library.API.Models.BookDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Library.API.Models.BookDto.Pages">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Library.API.Models.BookDto.AuthorId">
            <summary>
            作者Id
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForCreationDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForCreationDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForCreationDto.Pages">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForUpdateDto.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForUpdateDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Library.API.Models.BookForUpdateDto.Pages">
            <summary>
            页码
            </summary>
        </member>
    </members>
</doc>
